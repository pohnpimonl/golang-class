// Code generated by MockGen. DO NOT EDIT.
// Source: service/favorite.go
//
// Generated by this command:
//
//	mockgen -source=service/favorite.go -destination=service/mocks/mock_favorite.go -package=mocks
//
// Package mocks is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	model "github.com/golang-class/api/model"
	gomock "go.uber.org/mock/gomock"
)

// MockFavoriteService is a mock of FavoriteService interface.
type MockFavoriteService struct {
	ctrl     *gomock.Controller
	recorder *MockFavoriteServiceMockRecorder
}

// MockFavoriteServiceMockRecorder is the mock recorder for MockFavoriteService.
type MockFavoriteServiceMockRecorder struct {
	mock *MockFavoriteService
}

// NewMockFavoriteService creates a new mock instance.
func NewMockFavoriteService(ctrl *gomock.Controller) *MockFavoriteService {
	mock := &MockFavoriteService{ctrl: ctrl}
	mock.recorder = &MockFavoriteServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFavoriteService) EXPECT() *MockFavoriteServiceMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockFavoriteService) Add(ctx context.Context, url string) (*model.Favorite, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", ctx, url)
	ret0, _ := ret[0].(*model.Favorite)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Add indicates an expected call of Add.
func (mr *MockFavoriteServiceMockRecorder) Add(ctx, url any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockFavoriteService)(nil).Add), ctx, url)
}

// Delete mocks base method.
func (m *MockFavoriteService) Delete(ctx context.Context, id string) (*model.Favorite, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, id)
	ret0, _ := ret[0].(*model.Favorite)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete.
func (mr *MockFavoriteServiceMockRecorder) Delete(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockFavoriteService)(nil).Delete), ctx, id)
}

// GetFavoriteList mocks base method.
func (m *MockFavoriteService) GetFavoriteList(ctx context.Context) ([]model.Favorite, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFavoriteList", ctx)
	ret0, _ := ret[0].([]model.Favorite)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFavoriteList indicates an expected call of GetFavoriteList.
func (mr *MockFavoriteServiceMockRecorder) GetFavoriteList(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFavoriteList", reflect.TypeOf((*MockFavoriteService)(nil).GetFavoriteList), ctx)
}
